{
  "hash": "eaa83fa7bf34cfb44678bde30cdcb7d2",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Modelos de deep learning\"\n---\n\n\n\n\n# Importar librerías \n\n::: {#8d51ced1 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n\nimport plotly.graph_objects as go\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\n```\n:::\n\n\n# Importar datos\n\n::: {#608ba2ce .cell execution_count=2}\n``` {.python .cell-code}\nbtc = pd.read_csv('data/btc_models.csv')\n\nbtc\n```\n\n::: {.cell-output .cell-output-display execution_count=154}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Price</th>\n      <th>Open</th>\n      <th>High</th>\n      <th>Low</th>\n      <th>Vol.</th>\n      <th>Change %</th>\n      <th>R_j</th>\n      <th>A_t</th>\n      <th>σ_7</th>\n      <th>σ_14</th>\n      <th>σ_21</th>\n      <th>σ_28</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2024-03-24</td>\n      <td>67211.9</td>\n      <td>64036.5</td>\n      <td>67587.8</td>\n      <td>63812.9</td>\n      <td>65590.0</td>\n      <td>4.96</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2024-03-23</td>\n      <td>64037.8</td>\n      <td>63785.6</td>\n      <td>65972.4</td>\n      <td>63074.9</td>\n      <td>35110.0</td>\n      <td>0.40</td>\n      <td>-0.047225</td>\n      <td>-0.047225</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2024-03-22</td>\n      <td>63785.5</td>\n      <td>65501.5</td>\n      <td>66633.3</td>\n      <td>62328.3</td>\n      <td>72430.0</td>\n      <td>-2.62</td>\n      <td>-0.003940</td>\n      <td>-0.051165</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2024-03-21</td>\n      <td>65503.8</td>\n      <td>67860.0</td>\n      <td>68161.7</td>\n      <td>64616.1</td>\n      <td>75260.0</td>\n      <td>-3.46</td>\n      <td>0.026939</td>\n      <td>-0.024226</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2024-03-20</td>\n      <td>67854.0</td>\n      <td>62046.8</td>\n      <td>68029.5</td>\n      <td>60850.9</td>\n      <td>133530.0</td>\n      <td>9.35</td>\n      <td>0.035879</td>\n      <td>0.011652</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>4994</th>\n      <td>2010-07-22</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>2160.0</td>\n      <td>0.00</td>\n      <td>0.000000</td>\n      <td>-4.322978</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4995</th>\n      <td>2010-07-21</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>580.0</td>\n      <td>0.00</td>\n      <td>0.000000</td>\n      <td>-4.322978</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4996</th>\n      <td>2010-07-20</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>260.0</td>\n      <td>0.00</td>\n      <td>0.000000</td>\n      <td>-4.322978</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4997</th>\n      <td>2010-07-19</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>570.0</td>\n      <td>0.00</td>\n      <td>0.000000</td>\n      <td>-4.322978</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4998</th>\n      <td>2010-07-18</td>\n      <td>0.1</td>\n      <td>0.0</td>\n      <td>0.1</td>\n      <td>0.1</td>\n      <td>80.0</td>\n      <td>0.00</td>\n      <td>0.000000</td>\n      <td>-4.322978</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>4999 rows × 13 columns</p>\n</div>\n```\n:::\n:::\n\n\n::: {#844ebda4 .cell execution_count=3}\n``` {.python .cell-code}\nbtc.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 4999 entries, 0 to 4998\nData columns (total 13 columns):\n #   Column    Non-Null Count  Dtype  \n---  ------    --------------  -----  \n 0   Date      4999 non-null   object \n 1   Price     4999 non-null   float64\n 2   Open      4999 non-null   float64\n 3   High      4999 non-null   float64\n 4   Low       4999 non-null   float64\n 5   Vol.      4999 non-null   float64\n 6   Change %  4999 non-null   float64\n 7   R_j       4998 non-null   float64\n 8   A_t       4998 non-null   float64\n 9   σ_7       4992 non-null   float64\n 10  σ_14      4985 non-null   float64\n 11  σ_21      4978 non-null   float64\n 12  σ_28      4971 non-null   float64\ndtypes: float64(12), object(1)\nmemory usage: 507.8+ KB\n```\n:::\n:::\n\n\n::: {#ebfb0eaf .cell execution_count=4}\n``` {.python .cell-code}\nbtc = btc.fillna(0)\n\nbtc['Date'] = pd.to_datetime(btc['Date'], format='%Y-%m-%d')\n\nbtc.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 4999 entries, 0 to 4998\nData columns (total 13 columns):\n #   Column    Non-Null Count  Dtype         \n---  ------    --------------  -----         \n 0   Date      4999 non-null   datetime64[ns]\n 1   Price     4999 non-null   float64       \n 2   Open      4999 non-null   float64       \n 3   High      4999 non-null   float64       \n 4   Low       4999 non-null   float64       \n 5   Vol.      4999 non-null   float64       \n 6   Change %  4999 non-null   float64       \n 7   R_j       4999 non-null   float64       \n 8   A_t       4999 non-null   float64       \n 9   σ_7       4999 non-null   float64       \n 10  σ_14      4999 non-null   float64       \n 11  σ_21      4999 non-null   float64       \n 12  σ_28      4999 non-null   float64       \ndtypes: datetime64[ns](1), float64(12)\nmemory usage: 507.8 KB\n```\n:::\n:::\n\n\n# Obtención de las series de tiempo y conjuntos de prueba, validación y entrenamiento\n\n::: {#cd52565b .cell execution_count=5}\n``` {.python .cell-code}\ndef split_dataset(df: pd.DataFrame, tau: int, column: str) -> list:\n    serie = df[column]\n    n = len(serie)\n    train_w = n - (tau * 3)\n    \n    X_train = np.array([serie.iloc[i - tau:i].values.flatten() for i in range(tau, train_w)])\n    y_train = np.array(serie.iloc[tau:train_w].values.flatten()).reshape(-1, 1)\n\n    X_val = np.array([serie.iloc[i - tau:i].values.flatten() for i in range(train_w, train_w + tau)])\n    y_val = np.array(serie.iloc[train_w:train_w + tau].values.flatten().tolist())\n\n    X_test = np.array([serie.iloc[i - tau:i].values.flatten() for i in range(train_w + tau, train_w + (2 * tau))])\n    y_test = np.array(serie.iloc[train_w + tau:train_w + (2 * tau)].values.flatten().tolist())\n\n    return [X_train, y_train, X_val, y_val, X_test, y_test]\n```\n:::\n\n\n## Series de tiempo del precio\n\n::: {#b46330c0 .cell execution_count=6}\n``` {.python .cell-code}\nprice_7 = split_dataset(btc, 7, 'Price')\nprice_14 = split_dataset(btc, 14, 'Price')\nprice_21 = split_dataset(btc, 21, 'Price')\nprice_28 = split_dataset(btc, 28, 'Price')\n\nprice = [price_7, price_14, price_21, price_28]\n\nprint('τ = 7')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en X: {price_7[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en y: {price_7[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en X: {price_7[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en y: {price_7[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en X: {price_7[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en y: {price_7[5].shape}')\n\nprint('\\nτ = 14')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en X: {price_14[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en y: {price_14[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en X: {price_14[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en y: {price_14[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en X: {price_14[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en y: {price_14[5].shape}')\n\nprint('\\nτ = 21')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en X: {price_21[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en y: {price_21[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en X: {price_21[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en y: {price_21[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en X: {price_21[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en y: {price_21[5].shape}')\n\nprint('\\nτ = 28')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en X: {price_28[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en y: {price_28[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en X: {price_28[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en y: {price_28[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en X: {price_28[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en y: {price_28[5].shape}')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nτ = 7\nTamaño del conjunto de entrenamiento τ = 7 en X: (4971, 7)\nTamaño del conjunto de entrenamiento τ = 7 en y: (4971, 1)\nTamaño del conjunto de validación τ = 7 en X: (7, 7)\nTamaño del conjunto de validación τ = 7 en y: (7,)\nTamaño del conjunto de prueba τ = 7 en X: (7, 7)\nTamaño del conjunto de prueba τ = 7 en y: (7,)\n\nτ = 14\nTamaño del conjunto de entrenamiento τ = 14 en X: (4943, 14)\nTamaño del conjunto de entrenamiento τ = 14 en y: (4943, 1)\nTamaño del conjunto de validación τ = 14 en X: (14, 14)\nTamaño del conjunto de validación τ = 14 en y: (14,)\nTamaño del conjunto de prueba τ = 14 en X: (14, 14)\nTamaño del conjunto de prueba τ = 14 en y: (14,)\n\nτ = 21\nTamaño del conjunto de entrenamiento τ = 21 en X: (4915, 21)\nTamaño del conjunto de entrenamiento τ = 21 en y: (4915, 1)\nTamaño del conjunto de validación τ = 21 en X: (21, 21)\nTamaño del conjunto de validación τ = 21 en y: (21,)\nTamaño del conjunto de prueba τ = 21 en X: (21, 21)\nTamaño del conjunto de prueba τ = 21 en y: (21,)\n\nτ = 28\nTamaño del conjunto de entrenamiento τ = 28 en X: (4887, 28)\nTamaño del conjunto de entrenamiento τ = 28 en y: (4887, 1)\nTamaño del conjunto de validación τ = 28 en X: (28, 28)\nTamaño del conjunto de validación τ = 28 en y: (28,)\nTamaño del conjunto de prueba τ = 28 en X: (28, 28)\nTamaño del conjunto de prueba τ = 28 en y: (28,)\n```\n:::\n:::\n\n\n## Series de tiempo del retorno acumulado\n\n::: {#1aa74e00 .cell execution_count=7}\n``` {.python .cell-code}\nat_7 = split_dataset(btc, 7, 'A_t')\nat_14 = split_dataset(btc, 14, 'A_t')\nat_21 = split_dataset(btc, 21, 'A_t')\nat_28 = split_dataset(btc, 28, 'A_t')\n\nat = [at_7, at_14, at_21, at_28]\n\nprint('τ = 7')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en X: {at_7[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en y: {at_7[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en X: {at_7[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en y: {at_7[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en X: {at_7[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en y: {at_7[5].shape}')\n\nprint('\\nτ = 14')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en X: {at_14[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en y: {at_14[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en X: {at_14[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en y: {at_14[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en X: {at_14[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en y: {at_14[5].shape}')\n\nprint('\\nτ = 21')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en X: {at_21[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en y: {at_21[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en X: {at_21[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en y: {at_21[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en X: {at_21[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en y: {at_21[5].shape}')\n\nprint('\\nτ = 28')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en X: {at_28[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en y: {at_28[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en X: {at_28[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en y: {at_28[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en X: {at_28[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en y: {at_28[5].shape}')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nτ = 7\nTamaño del conjunto de entrenamiento τ = 7 en X: (4971, 7)\nTamaño del conjunto de entrenamiento τ = 7 en y: (4971, 1)\nTamaño del conjunto de validación τ = 7 en X: (7, 7)\nTamaño del conjunto de validación τ = 7 en y: (7,)\nTamaño del conjunto de prueba τ = 7 en X: (7, 7)\nTamaño del conjunto de prueba τ = 7 en y: (7,)\n\nτ = 14\nTamaño del conjunto de entrenamiento τ = 14 en X: (4943, 14)\nTamaño del conjunto de entrenamiento τ = 14 en y: (4943, 1)\nTamaño del conjunto de validación τ = 14 en X: (14, 14)\nTamaño del conjunto de validación τ = 14 en y: (14,)\nTamaño del conjunto de prueba τ = 14 en X: (14, 14)\nTamaño del conjunto de prueba τ = 14 en y: (14,)\n\nτ = 21\nTamaño del conjunto de entrenamiento τ = 21 en X: (4915, 21)\nTamaño del conjunto de entrenamiento τ = 21 en y: (4915, 1)\nTamaño del conjunto de validación τ = 21 en X: (21, 21)\nTamaño del conjunto de validación τ = 21 en y: (21,)\nTamaño del conjunto de prueba τ = 21 en X: (21, 21)\nTamaño del conjunto de prueba τ = 21 en y: (21,)\n\nτ = 28\nTamaño del conjunto de entrenamiento τ = 28 en X: (4887, 28)\nTamaño del conjunto de entrenamiento τ = 28 en y: (4887, 1)\nTamaño del conjunto de validación τ = 28 en X: (28, 28)\nTamaño del conjunto de validación τ = 28 en y: (28,)\nTamaño del conjunto de prueba τ = 28 en X: (28, 28)\nTamaño del conjunto de prueba τ = 28 en y: (28,)\n```\n:::\n:::\n\n\n## Series de tiempo de la volatilidad\n\n### Serie de tiempo de la volatidad para σ = 7\n\n::: {#b7eb70b9 .cell execution_count=8}\n``` {.python .cell-code}\nvol_7 = split_dataset(btc, 7, 'σ_7')\nvol_14 = split_dataset(btc, 14, 'σ_7')\nvol_21 = split_dataset(btc, 21, 'σ_7')\nvol_28 = split_dataset(btc, 28, 'σ_7')\n\nvo_7 = [vol_7, vol_14, vol_21, vol_28]\n\nprint('τ = 7')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en X: {vol_7[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en y: {vol_7[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en X: {vol_7[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en y: {vol_7[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en X: {vol_7[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en y: {vol_7[5].shape}')\n\nprint('\\nτ = 14')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en X: {vol_14[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en y: {vol_14[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en X: {vol_14[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en y: {vol_14[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en X: {vol_14[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en y: {vol_14[5].shape}')\n\nprint('\\nτ = 21')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en X: {vol_21[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en y: {vol_21[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en X: {vol_21[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en y: {vol_21[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en X: {vol_21[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en y: {vol_21[5].shape}')\n\nprint('\\nτ = 28')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en X: {vol_28[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en y: {vol_28[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en X: {vol_28[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en y: {vol_28[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en X: {vol_28[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en y: {vol_28[5].shape}')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nτ = 7\nTamaño del conjunto de entrenamiento τ = 7 en X: (4971, 7)\nTamaño del conjunto de entrenamiento τ = 7 en y: (4971, 1)\nTamaño del conjunto de validación τ = 7 en X: (7, 7)\nTamaño del conjunto de validación τ = 7 en y: (7,)\nTamaño del conjunto de prueba τ = 7 en X: (7, 7)\nTamaño del conjunto de prueba τ = 7 en y: (7,)\n\nτ = 14\nTamaño del conjunto de entrenamiento τ = 14 en X: (4943, 14)\nTamaño del conjunto de entrenamiento τ = 14 en y: (4943, 1)\nTamaño del conjunto de validación τ = 14 en X: (14, 14)\nTamaño del conjunto de validación τ = 14 en y: (14,)\nTamaño del conjunto de prueba τ = 14 en X: (14, 14)\nTamaño del conjunto de prueba τ = 14 en y: (14,)\n\nτ = 21\nTamaño del conjunto de entrenamiento τ = 21 en X: (4915, 21)\nTamaño del conjunto de entrenamiento τ = 21 en y: (4915, 1)\nTamaño del conjunto de validación τ = 21 en X: (21, 21)\nTamaño del conjunto de validación τ = 21 en y: (21,)\nTamaño del conjunto de prueba τ = 21 en X: (21, 21)\nTamaño del conjunto de prueba τ = 21 en y: (21,)\n\nτ = 28\nTamaño del conjunto de entrenamiento τ = 28 en X: (4887, 28)\nTamaño del conjunto de entrenamiento τ = 28 en y: (4887, 1)\nTamaño del conjunto de validación τ = 28 en X: (28, 28)\nTamaño del conjunto de validación τ = 28 en y: (28,)\nTamaño del conjunto de prueba τ = 28 en X: (28, 28)\nTamaño del conjunto de prueba τ = 28 en y: (28,)\n```\n:::\n:::\n\n\n### Serie de tiempo de la volatidad para σ = 14\n\n::: {#1e5b1a17 .cell execution_count=9}\n``` {.python .cell-code}\nvol_7 = split_dataset(btc, 7, 'σ_14')\nvol_14 = split_dataset(btc, 14, 'σ_14')\nvol_21 = split_dataset(btc, 21, 'σ_14')\nvol_28 = split_dataset(btc, 28, 'σ_14')\n\nvo_14 = [vol_7, vol_14, vol_21, vol_28]\n\nprint('τ = 7')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en X: {vol_7[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en y: {vol_7[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en X: {vol_7[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en y: {vol_7[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en X: {vol_7[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en y: {vol_7[5].shape}')\n\nprint('\\nτ = 14')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en X: {vol_14[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en y: {vol_14[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en X: {vol_14[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en y: {vol_14[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en X: {vol_14[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en y: {vol_14[5].shape}')\n\nprint('\\nτ = 21')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en X: {vol_21[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en y: {vol_21[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en X: {vol_21[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en y: {vol_21[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en X: {vol_21[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en y: {vol_21[5].shape}')\n\nprint('\\nτ = 28')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en X: {vol_28[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en y: {vol_28[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en X: {vol_28[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en y: {vol_28[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en X: {vol_28[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en y: {vol_28[5].shape}')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nτ = 7\nTamaño del conjunto de entrenamiento τ = 7 en X: (4971, 7)\nTamaño del conjunto de entrenamiento τ = 7 en y: (4971, 1)\nTamaño del conjunto de validación τ = 7 en X: (7, 7)\nTamaño del conjunto de validación τ = 7 en y: (7,)\nTamaño del conjunto de prueba τ = 7 en X: (7, 7)\nTamaño del conjunto de prueba τ = 7 en y: (7,)\n\nτ = 14\nTamaño del conjunto de entrenamiento τ = 14 en X: (4943, 14)\nTamaño del conjunto de entrenamiento τ = 14 en y: (4943, 1)\nTamaño del conjunto de validación τ = 14 en X: (14, 14)\nTamaño del conjunto de validación τ = 14 en y: (14,)\nTamaño del conjunto de prueba τ = 14 en X: (14, 14)\nTamaño del conjunto de prueba τ = 14 en y: (14,)\n\nτ = 21\nTamaño del conjunto de entrenamiento τ = 21 en X: (4915, 21)\nTamaño del conjunto de entrenamiento τ = 21 en y: (4915, 1)\nTamaño del conjunto de validación τ = 21 en X: (21, 21)\nTamaño del conjunto de validación τ = 21 en y: (21,)\nTamaño del conjunto de prueba τ = 21 en X: (21, 21)\nTamaño del conjunto de prueba τ = 21 en y: (21,)\n\nτ = 28\nTamaño del conjunto de entrenamiento τ = 28 en X: (4887, 28)\nTamaño del conjunto de entrenamiento τ = 28 en y: (4887, 1)\nTamaño del conjunto de validación τ = 28 en X: (28, 28)\nTamaño del conjunto de validación τ = 28 en y: (28,)\nTamaño del conjunto de prueba τ = 28 en X: (28, 28)\nTamaño del conjunto de prueba τ = 28 en y: (28,)\n```\n:::\n:::\n\n\n### Serie de tiempo de la volatidad para σ = 21\n\n::: {#f5011f41 .cell execution_count=10}\n``` {.python .cell-code}\nvol_7 = split_dataset(btc, 7, 'σ_21')\nvol_14 = split_dataset(btc, 14, 'σ_21')\nvol_21 = split_dataset(btc, 21, 'σ_21')\nvol_28 = split_dataset(btc, 28, 'σ_21')\n\nvo_21 = [vol_7, vol_14, vol_21, vol_28]\n\nprint('τ = 7')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en X: {vol_7[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en y: {vol_7[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en X: {vol_7[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en y: {vol_7[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en X: {vol_7[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en y: {vol_7[5].shape}')\n\nprint('\\nτ = 14')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en X: {vol_14[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en y: {vol_14[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en X: {vol_14[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en y: {vol_14[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en X: {vol_14[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en y: {vol_14[5].shape}')\n\nprint('\\nτ = 21')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en X: {vol_21[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en y: {vol_21[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en X: {vol_21[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en y: {vol_21[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en X: {vol_21[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en y: {vol_21[5].shape}')\n\nprint('\\nτ = 28')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en X: {vol_28[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en y: {vol_28[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en X: {vol_28[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en y: {vol_28[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en X: {vol_28[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en y: {vol_28[5].shape}')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nτ = 7\nTamaño del conjunto de entrenamiento τ = 7 en X: (4971, 7)\nTamaño del conjunto de entrenamiento τ = 7 en y: (4971, 1)\nTamaño del conjunto de validación τ = 7 en X: (7, 7)\nTamaño del conjunto de validación τ = 7 en y: (7,)\nTamaño del conjunto de prueba τ = 7 en X: (7, 7)\nTamaño del conjunto de prueba τ = 7 en y: (7,)\n\nτ = 14\nTamaño del conjunto de entrenamiento τ = 14 en X: (4943, 14)\nTamaño del conjunto de entrenamiento τ = 14 en y: (4943, 1)\nTamaño del conjunto de validación τ = 14 en X: (14, 14)\nTamaño del conjunto de validación τ = 14 en y: (14,)\nTamaño del conjunto de prueba τ = 14 en X: (14, 14)\nTamaño del conjunto de prueba τ = 14 en y: (14,)\n\nτ = 21\nTamaño del conjunto de entrenamiento τ = 21 en X: (4915, 21)\nTamaño del conjunto de entrenamiento τ = 21 en y: (4915, 1)\nTamaño del conjunto de validación τ = 21 en X: (21, 21)\nTamaño del conjunto de validación τ = 21 en y: (21,)\nTamaño del conjunto de prueba τ = 21 en X: (21, 21)\nTamaño del conjunto de prueba τ = 21 en y: (21,)\n\nτ = 28\nTamaño del conjunto de entrenamiento τ = 28 en X: (4887, 28)\nTamaño del conjunto de entrenamiento τ = 28 en y: (4887, 1)\nTamaño del conjunto de validación τ = 28 en X: (28, 28)\nTamaño del conjunto de validación τ = 28 en y: (28,)\nTamaño del conjunto de prueba τ = 28 en X: (28, 28)\nTamaño del conjunto de prueba τ = 28 en y: (28,)\n```\n:::\n:::\n\n\n### Serie de tiempo de la volatidad para σ = 28\n\n::: {#94507897 .cell execution_count=11}\n``` {.python .cell-code}\nvol_7 = split_dataset(btc, 7, 'σ_7')\nvol_14 = split_dataset(btc, 14, 'σ_7')\nvol_21 = split_dataset(btc, 21, 'σ_7')\nvol_28 = split_dataset(btc, 28, 'σ_7')\n\nvo_28 = [vol_7, vol_14, vol_21, vol_28]\n\nprint('τ = 7')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en X: {vol_7[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 7 en y: {vol_7[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en X: {vol_7[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 7 en y: {vol_7[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en X: {vol_7[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 7 en y: {vol_7[5].shape}')\n\nprint('\\nτ = 14')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en X: {vol_14[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 14 en y: {vol_14[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en X: {vol_14[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 14 en y: {vol_14[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en X: {vol_14[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 14 en y: {vol_14[5].shape}')\n\nprint('\\nτ = 21')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en X: {vol_21[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 21 en y: {vol_21[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en X: {vol_21[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 21 en y: {vol_21[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en X: {vol_21[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 21 en y: {vol_21[5].shape}')\n\nprint('\\nτ = 28')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en X: {vol_28[0].shape}')\nprint(f'Tamaño del conjunto de entrenamiento τ = 28 en y: {vol_28[1].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en X: {vol_28[2].shape}')\nprint(f'Tamaño del conjunto de validación τ = 28 en y: {vol_28[3].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en X: {vol_28[4].shape}')\nprint(f'Tamaño del conjunto de prueba τ = 28 en y: {vol_28[5].shape}')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nτ = 7\nTamaño del conjunto de entrenamiento τ = 7 en X: (4971, 7)\nTamaño del conjunto de entrenamiento τ = 7 en y: (4971, 1)\nTamaño del conjunto de validación τ = 7 en X: (7, 7)\nTamaño del conjunto de validación τ = 7 en y: (7,)\nTamaño del conjunto de prueba τ = 7 en X: (7, 7)\nTamaño del conjunto de prueba τ = 7 en y: (7,)\n\nτ = 14\nTamaño del conjunto de entrenamiento τ = 14 en X: (4943, 14)\nTamaño del conjunto de entrenamiento τ = 14 en y: (4943, 1)\nTamaño del conjunto de validación τ = 14 en X: (14, 14)\nTamaño del conjunto de validación τ = 14 en y: (14,)\nTamaño del conjunto de prueba τ = 14 en X: (14, 14)\nTamaño del conjunto de prueba τ = 14 en y: (14,)\n\nτ = 21\nTamaño del conjunto de entrenamiento τ = 21 en X: (4915, 21)\nTamaño del conjunto de entrenamiento τ = 21 en y: (4915, 1)\nTamaño del conjunto de validación τ = 21 en X: (21, 21)\nTamaño del conjunto de validación τ = 21 en y: (21,)\nTamaño del conjunto de prueba τ = 21 en X: (21, 21)\nTamaño del conjunto de prueba τ = 21 en y: (21,)\n\nτ = 28\nTamaño del conjunto de entrenamiento τ = 28 en X: (4887, 28)\nTamaño del conjunto de entrenamiento τ = 28 en y: (4887, 1)\nTamaño del conjunto de validación τ = 28 en X: (28, 28)\nTamaño del conjunto de validación τ = 28 en y: (28,)\nTamaño del conjunto de prueba τ = 28 en X: (28, 28)\nTamaño del conjunto de prueba τ = 28 en y: (28,)\n```\n:::\n:::\n\n\n# Visualización de los pliegues extraídos\n\n::: {#21c8a88c .cell execution_count=12}\n``` {.python .cell-code}\ndef plot_folds(data: np.array, tau_v: list, name: str):\n    fig = go.Figure()\n\n    colors = {\n        'train': '#9B7EBD',\n        'validation': '#7AB2D3',\n        'test': '#CBD2A4'\n    }\n\n    for i, tau in enumerate(tau_v):\n        X_train_s, y_train_s = data[i][0].shape, data[i][1].shape\n        X_val_s, y_val_s = data[i][2].shape, data[i][3].shape\n        X_test_s, y_test_s = data[i][4].shape, data[i][5].shape\n\n        fig.add_trace(go.Scatter(\n            x=list(range(1, X_train_s[0] + 1)),\n            y=[i + 1] * X_train_s[0],\n            mode='lines',\n            line=dict(color=colors['train'], width=6),\n            name='Train' if i == 0 else \"\",\n            showlegend=(i == 0)\n        ))\n\n        fig.add_trace(go.Scatter(\n            x=list(range(X_train_s[0] + 1, X_train_s[0] + X_val_s[0] + 1)),\n            y=[i + 1] * X_val_s[0],\n            mode='lines',\n            line=dict(color=colors['validation'], width=6),\n            name='Validation' if i == 0 else \"\",\n            showlegend=(i == 0)\n        ))\n\n        fig.add_trace(go.Scatter(\n            x=list(range(X_train_s[0] + X_val_s[0] + 1, X_train_s[0] + X_val_s[0] + X_test_s[0] + 1)),\n            y=[i + 1] * X_test_s[0],\n            mode='lines',\n            line=dict(color=colors['test'], width=6),\n            name='Test' if i == 0 else \"\",\n            showlegend=(i == 0)\n        ))\n\n    fig.update_layout(\n        title=f\"Visualización de pliegues para {name}\",\n        xaxis_title=\"Índice de tiempo\",\n        yaxis_title=\"Número de pliegue\",\n        legend=dict(orientation=\"h\", yanchor=\"bottom\", y=1.02, xanchor=\"right\", x=1),\n        margin={'b': 0, 'r': 30, 'l': 30, 't': 80},\n        plot_bgcolor='rgba(0, 0, 0, 0.0)',\n        paper_bgcolor='rgba(0, 0, 0, 0.0)',\n        font_color=\"white\",\n        hoverlabel=dict(\n            bgcolor=\"#222\"\n        ),\n        xaxis=dict(gridcolor='#222', tickfont=dict(color='white'), range = [4800, 5000]),\n        yaxis=dict(gridcolor='#222', tickfont=dict(color='white'), tickvals=[1, 2, 3, 4])\n    )\n\n    return fig\n```\n:::\n\n\n## Pliegues del precio\n\n::: {#45ab079a .cell execution_count=13}\n``` {.python .cell-code}\ntau_v = [7, 14, 21, 28]\n\nfig_p = plot_folds(price, tau_v, 'Price')\nfig_p.show()\n```\n:::\n\n\n\n\n``` {=html}\n<iframe\n    src = 'graphs/price_folds.html'\n    width = '730'\n    height = '400'\n    title = 'Visualización de los folds para la variable del precio'\n>\n</iframe>\n```\n\n\n\n\n## Pliegues del retorno acumulado\n\n::: {#41f95823 .cell execution_count=15}\n``` {.python .cell-code}\nfig_p = plot_folds(price, tau_v, 'A_j')\nfig_p.show()\n```\n:::\n\n\n\n\n``` {=html}\n<iframe\n    src = 'graphs/returncumsum_folds.html'\n    width = '730'\n    height = '400'\n    title = 'Visualización de los folds para la variable del retorno acumulado'\n>\n</iframe>\n```\n\n",
    "supporting": [
      "deep_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n<script type=\"text/javascript\">\nwindow.PlotlyConfig = {MathJaxConfig: 'local'};\nif (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\nif (typeof require !== 'undefined') {\nrequire.undef(\"plotly\");\nrequirejs.config({\n    paths: {\n        'plotly': ['https://cdn.plot.ly/plotly-2.35.2.min']\n    }\n});\nrequire(['plotly'], function(Plotly) {\n    window._Plotly = Plotly;\n});\n}\n</script>\n\n"
      ]
    }
  }
}